% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hgch_area_Yea.R
\name{hgch_area_Yea}
\alias{hgch_area_Yea}
\title{Area chart Yea}
\usage{
hgch_area_Yea(data, ...)
}
\arguments{
\item{data}{A data frame, data frame extension (e.g. a tibble), a
lazy data frame (e.g. from dbplyr or dtplyr), or fringe data (e.g from homodatum).}

\item{...}{<\code{\link[=hgch_viz_options]{chart-options}}> Options to configure your hgchmagic plots}
}
\description{
\code{hgch_area_Yea()} Create a highcharter area plot based on a particular data type.
In this case, you can load data with only one column, where this is a
\strong{Year column}, or be sure that two firts columns they meet this condition.
}
\section{Ftype}{

Yea
}

\examples{
data <- sample_data("Yea", n = 30)
hgch_area_Yea(data)

# if you want to calculate the average instead of the sum, you can use agg inside a function
hgch_area_Yea(data, agg = "mean")

# data with more of one column
data <- sample_data("Yea-Dat-Yea-Yea", n = 30)
hgch_area_Yea(data)

# calculate percentage
hgch_area_Yea(data, percentage = TRUE)

# numeric format
hgch_area_Yea(data, percentage = TRUE, format_sample_num = "1.234,")

# You can call the mean and percentage in the tooltip plot
num_name <- names(data)[2]
data \%>\%
hgch_area_Yea(agg = "mean",
             tooltip = paste0("Average: {", num_name ,"} <br/> Percentage: {\%}\%"))

}
\seealso{
Other Yea plots: 
\code{\link{hgch_bar_Yea}()},
\code{\link{hgch_bubbles_Yea}()},
\code{\link{hgch_line_Yea}()},
\code{\link{hgch_pie_Yea}()},
\code{\link{hgch_treemap_Yea}()}
}
\concept{Yea plots}
