% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hgch_line_DatNum.R
\name{hgch_line_DatNum}
\alias{hgch_line_DatNum}
\title{Line chart Dat Num}
\usage{
hgch_line_DatNum(data, ...)
}
\arguments{
\item{data}{A data frame, data frame extension (e.g. a tibble), a
lazy data frame (e.g. from dbplyr or dtplyr), or fringe data (e.g from homodatum).}

\item{...}{<\code{\link[=hgch_viz_options]{chart-options}}> Options to configure your hgchmagic plots}
}
\description{
\code{hgch_line_DatNum()} Create a highcharter line plot based on a particular data type.
In this case, you can load data with only two columns, where the firts column is a
\strong{date column} and the second must be a \strong{numeric class column}, or be sure that
two firts columns they meet this condition
}
\section{Ftype}{

Dat-Num
}

\examples{
data <- sample_data("Dat-Num", n = 30)
hgch_line_DatNum(data)

hgch_line_DatNum(data)
# if you want to calculate the average instead of the sum, you can use agg inside a function
hgch_line_DatNum(data, agg = "mean")

# data with more of one column
data <- sample_data("Dat-Num-Cat-Cat-Cat-Num", n = 30)
hgch_line_DatNum(data)

# calculate percentage
hgch_line_DatNum(data, percentage = TRUE)

# numeric format
hgch_line_DatNum(data, percentage = TRUE, format_sample_num = "1.234,")

# You can call the mean and percentage in the tooltip plot
num_name <- names(data)[2]
data \%>\%
hgch_line_DatNum(agg = "mean",
             tooltip = paste0("Average: {", num_name ,"} <br/> Percentage: {\%}\%"))

}
\seealso{
Other Dat-Num plots: 
\code{\link{hgch_area_DatNum}()},
\code{\link{hgch_scatter_DatNum}()}
}
\concept{Dat-Num plots}
